name: Build 

permissions:
  contents: write
  actions: read

on:
  push:
    branches:
      - update  

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run build.ps1
        run: |
          Start-Process pwsh -ArgumentList '-NoProfile -ExecutionPolicy Bypass -File ./build.ps1' -Verb RunAs
        shell: pwsh

      - name: Configure Git
        run: |
          git config --global user.email "itt-action@noreply.github.com"
          git config --global user.name "itt-action"
        shell: pwsh

      - name: Commit and Push Changes
        run: |
          git add ./itt.ps1
          git commit -m "Update"
          git push origin update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh

      - name: Set Version to Today's Date
        id: extract_version
        run: |
          $version = (Get-Date -Format "yy.MM.dd")
          echo "VERSION=$version" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Get Latest Commit Information
        id: commit_info
        run: |
          $commitMessage = git log -1 --pretty=format:'%s'
          $commitAuthor = git log -1 --pretty=format:'%an'
          echo "COMMIT_MESSAGE=$commitMessage" >> $env:GITHUB_ENV
          echo "COMMIT_AUTHOR=$commitAuthor" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Create Tag
        id: create_tag
        run: |
          $tagExists = git tag -l $env:VERSION
          if ($tagExists -eq "") {
            git tag $env:VERSION
            if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to create tag $env:VERSION"
              exit 1
            }
            git push origin $env:VERSION
            if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to push tag $env:VERSION"
              exit 1
            }
          } else {
            Write-Host "Tag $env:VERSION already exists, skipping tag creation"
          }
        shell: pwsh

      - name: Create and Upload Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            **Latest Commit:**
            - Title: ${{ env.COMMIT_TITLE }}
            - Author: ${{ env.COMMIT_AUTHOR }}
            <pre><code>irm bit.ly/ittea | iex</code></pre>
          append_body: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
